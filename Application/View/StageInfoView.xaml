<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" 
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" 
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:ORM="clr-namespace:FederalProjectManager.ORM"
             xmlns:local="clr-namespace:FederalProjectManager.View"
             xmlns:model="clr-namespace:FederalProjectManager.Model"
             xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
             x:Class="FederalProjectManager.View.StageInfoView"
             dx:ThemeManager.ThemeName="MetropolisDark"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="500">
    <UserControl.Resources>
        <dx:LinqCollectionViewDataSource x:Key="ParametersDataSource" Culture="ru" ContextType="{x:Type ORM:FPMDataContext}" dx:DesignDataManager.DesignData="{dx:DesignDataSettings RowCount=5, UseDistinctValues=True}" Path="Parameter">
            <dx:LinqCollectionViewDataSource.SortDescriptions>
                <ComponentModel:SortDescription Direction="Ascending" PropertyName="Name"/>
            </dx:LinqCollectionViewDataSource.SortDescriptions>
        </dx:LinqCollectionViewDataSource>
        <dx:LinqCollectionViewDataSource x:Key="ParameterValuesDataSource" Culture="ru" ContextType="{x:Type ORM:FPMDataContext}" dx:DesignDataManager.DesignData="{dx:DesignDataSettings RowCount=5, UseDistinctValues=True}" Path="ParameterValue">
            <dx:LinqCollectionViewDataSource.SortDescriptions>
                <ComponentModel:SortDescription Direction="Ascending" PropertyName="Value"/>
            </dx:LinqCollectionViewDataSource.SortDescriptions>
        </dx:LinqCollectionViewDataSource>
    </UserControl.Resources>
    <Grid Height="450">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="0,15,0,5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="5,5,10,5" Content="Название"/>
            <dxe:TextEdit x:Uid="CaptionText" x:Name="CaptionText" 
			              Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" 
			              Width="410" HorizontalAlignment="Left" VerticalAlignment="Center"
                          ValidateOnEnterKeyPressed="True"
			              EditValue="{Binding Stage.Name, Mode=TwoWay, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                          IsReadOnly="{Binding Stage.IsEditable, Converter={model:InverseBoolConverter}}"/>

            <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5,5,10,5" Content="Состояние"/>
            <dxe:ComboBoxEdit x:Uid="StageLookup" x:Name="StageLookup" 
				              Grid.Row="1" Grid.Column="1"
                              ValidateOnEnterKeyPressed="True"
				              Width="180" HorizontalAlignment="Left" VerticalAlignment="Center" 
				              EditValue="{Binding Stage.StageState, Mode=TwoWay, Converter={model:Int16ToInt32Converter}, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
				              DisplayMember="Value" ValueMember="Key" IsTextEditable="False" Margin="0,7"
                              IsReadOnly="{Binding Stage.IsEditable, Converter={model:InverseBoolConverter}}"/>

            <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="5,5,10,5" Content="Роль"/>
            <dxe:ComboBoxEdit x:Uid="RoleLookup" x:Name="RoleLookup" 
				              Grid.Row="2" Grid.Column="1" 
                              ValidateOnEnterKeyPressed="True"
				              Width="180" HorizontalAlignment="Left" VerticalAlignment="Center"
				              EditValue="{Binding Stage.ResponsibleRole, Mode=TwoWay, Converter={model:Int16ToInt32Converter}, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
				              DisplayMember="Value" ValueMember="Key" IsTextEditable="False"
                              IsReadOnly="{Binding Stage.IsEditable, Converter={model:InverseBoolConverter}}"/>
            
            <Label Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="14,5,10,5" Content="Общий доступ"/>
            <dxe:CheckEdit Grid.Row="2" Grid.Column="3" 
                           ValidateOnEnterKeyPressed="True"
                           EditValue="{Binding Stage.IsPublic, Mode=TwoWay}"
                           IsReadOnly="{Binding Stage.IsEditable, Converter={model:InverseBoolConverter}}"/>


            <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="5,5,10,5" Content="Примечание"/>
            <dxe:TextEdit Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" Width="410"
				          TextWrapping="Wrap" Height="80"
				          EditValue="{Binding Stage.Note, Mode=TwoWay}"
                          IsReadOnly="{Binding Stage.IsEditable, Converter={model:InverseBoolConverter}}"/>

        </Grid>
        <Grid Grid.Row="1" Margin="0,15,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MaxWidth="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" MaxWidth="5" />
            </Grid.ColumnDefinitions>
            <Button x:Name="AddParameterButon" Grid.Column="1" Margin="5,0" Content="Добавить параметр" FontSize="12" 
                    Click="AddParameterButon_Click"
                    IsEnabled="{Binding Stage.IsEditable}"/>
            <Button x:Name="RemoveParameterButon" Grid.Column="3" Margin="5,0" Content="Удалить параметр" FontSize="12" 
                    Click="RemoveParameterButon_Click"
                    IsEnabled="{Binding AllowDeleteParameter}"/>
        </Grid>
        <dxg:GridControl x:Uid="StageParameterGrid" x:Name="StageParameterGrid" 
			             Grid.Row="2" 
			             AutoPopulateColumns="False" 
			             ScrollViewer.HorizontalScrollBarVisibility="Auto" 
			             ScrollViewer.VerticalScrollBarVisibility="Auto" 
			             HorizontalAlignment="Left" VerticalAlignment="Top" 
			             Margin="5,10,0,5" 
			             Height="278" Width="490"
                         ItemsSource="{Binding Stage.StageParameter, Mode=TwoWay}">
            <dxg:GridControl.Columns>
                <dxg:GridColumn x:Name="columnParameterName" Header="Параметр" Width="200">
                    <dxg:GridColumn.DisplayTemplate>
                        <ControlTemplate>
                            <TextBlock Text="{Binding Data.ParameterID, Converter={local:ParameterIDtoNameConverter}, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" />
                        </ControlTemplate>
                    </dxg:GridColumn.DisplayTemplate>
                    <dxg:GridColumn.EditTemplate>
                        <ControlTemplate>
                            <dxe:ComboBoxEdit x:Uid="ParameterLookup" x:Name="ParameterLookup"
								              ItemsSource="{Binding Data, Source={StaticResource ParametersDataSource}}"
								              EditValue="{Binding Data.ParameterID, Mode=TwoWay, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
								              DisplayMember="Name" ValueMember="ID" IsTextEditable="False"
                                              IsEnabled="{Binding Data.StageParameterID, Converter={model:NotInt32ToBoolConverter}}"/>
                        </ControlTemplate>
                    </dxg:GridColumn.EditTemplate>
                </dxg:GridColumn>
                <dxg:GridColumn x:Name="columnParameterValue" FieldName="ParameterValue" Header="Значение" Width="200">
                    <dxg:GridColumn.DisplayTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Data.NumberValue, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"                                           
									       Visibility="{Binding Data.ParameterID, ConverterParameter='Number', Converter={local:ParameterTypeConverter}}" />
                                <TextBlock Text="{Binding Data.StringValue, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
									       Visibility="{Binding Data.ParameterID, ConverterParameter='String', Converter={local:ParameterTypeConverter}}"/>
                                <TextBlock Text="{Binding Data.DateTimeValue, StringFormat=dd.MM.yyyy HH:mm, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
									       Visibility="{Binding Data.ParameterID, ConverterParameter='DateTime', Converter={local:ParameterTypeConverter}}"/>
                                <TextBlock Text="{Binding Data.StringValue, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
									       Visibility="{Binding Data.ParameterID, ConverterParameter='Path', Converter={local:ParameterTypeConverter}}"/>
                                <TextBlock Visibility="{Binding Data.ParameterID, ConverterParameter='Enum', Converter={local:ParameterTypeConverter}}">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{local:NumerToEnumConverter}">
                                            <Binding Path="Data.NumberValue"/>
                                            <Binding Path="Data.ParameterID"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </dxg:GridColumn.DisplayTemplate>
                    <dxg:GridColumn.EditTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <dxe:SpinEdit EditValue="{Binding Data.NumberValue, Mode=TwoWay, Converter={model:ObjectToDecimalConverter}, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                              Mask="{Binding Data.ParameterID, ConverterParameter='Number', Converter={local:NumericMaskConverter}}"
                                              MaskType="Numeric"
                                              Visibility="{Binding Data.ParameterID, ConverterParameter='Number', Converter={local:ParameterTypeConverter}}"/>
                                <dxe:TextEdit EditValue="{Binding Data.StringValue, Mode=TwoWay, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                                              Visibility="{Binding Data.ParameterID, ConverterParameter='String', Converter={local:ParameterTypeConverter}}"/>
                                <dxe:DateEdit EditValue="{Binding Data.DateTimeValue, Mode=TwoWay, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                                              Visibility="{Binding Data.ParameterID, ConverterParameter='DateTime', Converter={local:ParameterTypeConverter}}"
                                              Mask="dd.MM.yyyy HH:mm" MaskType="DateTime" MaskUseAsDisplayFormat="True"/>
                                <dxe:ButtonEdit EditValue="{Binding Data.StringValue, Mode=TwoWay, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                                Visibility="{Binding Data.ParameterID, ConverterParameter='Path', Converter={local:ParameterTypeConverter}}"
                                                IsTextEditable="False"
                                                DefaultButtonClick="BrowsePathButton_Click">
                                <dxe:ButtonInfo x:Name="OpenFile" GlyphKind="Search" IsLeft="True"
                                                Click="OpenFile_Click"
                                                ToolTipService.ToolTip="Открыть файл..." 
                                                IsEnabled="{Binding Data.StringValue, Mode=TwoWay, Converter={model:StringToBoolConverter}}"/>
                                </dxe:ButtonEdit>
                                <dxe:ComboBoxEdit x:Uid="EnumParamterLookup" x:Name="EnumParamterLookup"
                                                  ItemsSource="{Binding Data.ParameterID, Converter={local:ParameterValuesConverter}}"
                                                  EditValue="{Binding Data.NumberValue, Mode=TwoWay, Converter={model:DecimalToInt32Converter}, ValidatesOnExceptions=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                                  Visibility="{Binding Data.ParameterID, ConverterParameter='Enum', Converter={local:ParameterTypeConverter}}"
                                                  DisplayMember="Value" ValueMember="ID" IsTextEditable="False"/>
                            </StackPanel>
                        </ControlTemplate>
                    </dxg:GridColumn.EditTemplate>
                </dxg:GridColumn>
            </dxg:GridControl.Columns>
            <dxg:GridControl.View>
                <dxg:TableView ShowTotalSummary="False" AllowColumnMoving="False" ShowGroupPanel="False" EditorShowMode="MouseDownFocused" 
                               FocusedRow="{Binding FocusedParameter, Mode=TwoWay}"
                               InitNewRow="TableView_InitNewRow" ValidateRow="TableView_ValidateRow" InvalidRowException="TableView_InvalidRowException"
                               AllowEditing="{Binding Stage.IsEditable}"/>
            </dxg:GridControl.View>
        </dxg:GridControl>

    </Grid>
</UserControl>
